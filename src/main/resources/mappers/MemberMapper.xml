<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.MemberMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.Member" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="nickname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Md5_password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="gender" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="mobile" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="qq" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="weixin" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="member_type_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="member_type_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="vip_level" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="buy_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="end_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="aging" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="birthday" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="points" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="last_login" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="last_loginIp" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="register_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="register_ip" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="UUID_token" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="total_money" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="is_lock" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="is_del" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="gmt_created" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="gmt_modified" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.demo.model.Member" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="nickname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Md5_password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="gender" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="mobile" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="qq" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="weixin" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="member_type_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="member_type_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="vip_level" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="buy_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="end_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="aging" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="birthday" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="points" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="last_login" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="last_loginIp" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="register_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="register_ip" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="UUID_token" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="total_money" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="is_lock" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="is_del" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="gmt_created" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="gmt_modified" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="pic_address" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
      <arg column="favorites_ids" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, username, nickname, `password`, Md5_password, gender, mobile, qq, weixin, email, 
    member_type_id, member_type_name, vip_level, buy_time, end_time, aging, birthday, 
    points, last_login, last_loginIp, register_time, register_ip, UUID_token, total_money, 
    is_lock, is_del, gmt_created, gmt_modified
  </sql>
  <sql id="Blob_Column_List" >
    pic_address, favorites_ids
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.example.demo.model.MemberExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cps_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.model.MemberExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from cps_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cps_member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from cps_member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.model.MemberExample" >
    delete from cps_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Member" >
    insert into cps_member (id, username, nickname, 
      `password`, Md5_password, gender, 
      mobile, qq, weixin, 
      email, member_type_id, member_type_name, 
      vip_level, buy_time, end_time, 
      aging, birthday, points, 
      last_login, last_loginIp, register_time, 
      register_ip, UUID_token, total_money, 
      is_lock, is_del, gmt_created, 
      gmt_modified, pic_address, favorites_ids
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{md5Password,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{mobile,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{weixin,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{memberTypeId,jdbcType=INTEGER}, #{memberTypeName,jdbcType=VARCHAR}, 
      #{vipLevel,jdbcType=INTEGER}, #{buyTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{aging,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, #{points,jdbcType=INTEGER}, 
      #{lastLogin,jdbcType=TIMESTAMP}, #{lastLoginip,jdbcType=VARCHAR}, #{registerTime,jdbcType=TIMESTAMP}, 
      #{registerIp,jdbcType=VARCHAR}, #{uuidToken,jdbcType=VARCHAR}, #{totalMoney,jdbcType=INTEGER}, 
      #{isLock,jdbcType=INTEGER}, #{isDel,jdbcType=INTEGER}, #{gmtCreated,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP}, #{picAddress,jdbcType=LONGVARCHAR}, #{favoritesIds,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Member" >
    insert into cps_member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="password != null" >
        `password`,
      </if>
      <if test="md5Password != null" >
        Md5_password,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="weixin != null" >
        weixin,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="memberTypeId != null" >
        member_type_id,
      </if>
      <if test="memberTypeName != null" >
        member_type_name,
      </if>
      <if test="vipLevel != null" >
        vip_level,
      </if>
      <if test="buyTime != null" >
        buy_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="aging != null" >
        aging,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="points != null" >
        points,
      </if>
      <if test="lastLogin != null" >
        last_login,
      </if>
      <if test="lastLoginip != null" >
        last_loginIp,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
      <if test="registerIp != null" >
        register_ip,
      </if>
      <if test="uuidToken != null" >
        UUID_token,
      </if>
      <if test="totalMoney != null" >
        total_money,
      </if>
      <if test="isLock != null" >
        is_lock,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
      <if test="gmtCreated != null" >
        gmt_created,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
      <if test="picAddress != null" >
        pic_address,
      </if>
      <if test="favoritesIds != null" >
        favorites_ids,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="md5Password != null" >
        #{md5Password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="weixin != null" >
        #{weixin,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="memberTypeId != null" >
        #{memberTypeId,jdbcType=INTEGER},
      </if>
      <if test="memberTypeName != null" >
        #{memberTypeName,jdbcType=VARCHAR},
      </if>
      <if test="vipLevel != null" >
        #{vipLevel,jdbcType=INTEGER},
      </if>
      <if test="buyTime != null" >
        #{buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="aging != null" >
        #{aging,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="points != null" >
        #{points,jdbcType=INTEGER},
      </if>
      <if test="lastLogin != null" >
        #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginip != null" >
        #{lastLoginip,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null" >
        #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="uuidToken != null" >
        #{uuidToken,jdbcType=VARCHAR},
      </if>
      <if test="totalMoney != null" >
        #{totalMoney,jdbcType=INTEGER},
      </if>
      <if test="isLock != null" >
        #{isLock,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="gmtCreated != null" >
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="picAddress != null" >
        #{picAddress,jdbcType=LONGVARCHAR},
      </if>
      <if test="favoritesIds != null" >
        #{favoritesIds,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.MemberExample" resultType="java.lang.Integer" >
    select count(*) from cps_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cps_member
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.md5Password != null" >
        Md5_password = #{record.md5Password,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.weixin != null" >
        weixin = #{record.weixin,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.memberTypeId != null" >
        member_type_id = #{record.memberTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.memberTypeName != null" >
        member_type_name = #{record.memberTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.vipLevel != null" >
        vip_level = #{record.vipLevel,jdbcType=INTEGER},
      </if>
      <if test="record.buyTime != null" >
        buy_time = #{record.buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.aging != null" >
        aging = #{record.aging,jdbcType=INTEGER},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.points != null" >
        points = #{record.points,jdbcType=INTEGER},
      </if>
      <if test="record.lastLogin != null" >
        last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginip != null" >
        last_loginIp = #{record.lastLoginip,jdbcType=VARCHAR},
      </if>
      <if test="record.registerTime != null" >
        register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.registerIp != null" >
        register_ip = #{record.registerIp,jdbcType=VARCHAR},
      </if>
      <if test="record.uuidToken != null" >
        UUID_token = #{record.uuidToken,jdbcType=VARCHAR},
      </if>
      <if test="record.totalMoney != null" >
        total_money = #{record.totalMoney,jdbcType=INTEGER},
      </if>
      <if test="record.isLock != null" >
        is_lock = #{record.isLock,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreated != null" >
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null" >
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.picAddress != null" >
        pic_address = #{record.picAddress,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.favoritesIds != null" >
        favorites_ids = #{record.favoritesIds,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update cps_member
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      Md5_password = #{record.md5Password,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      weixin = #{record.weixin,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      member_type_id = #{record.memberTypeId,jdbcType=INTEGER},
      member_type_name = #{record.memberTypeName,jdbcType=VARCHAR},
      vip_level = #{record.vipLevel,jdbcType=INTEGER},
      buy_time = #{record.buyTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      aging = #{record.aging,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=DATE},
      points = #{record.points,jdbcType=INTEGER},
      last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      last_loginIp = #{record.lastLoginip,jdbcType=VARCHAR},
      register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      register_ip = #{record.registerIp,jdbcType=VARCHAR},
      UUID_token = #{record.uuidToken,jdbcType=VARCHAR},
      total_money = #{record.totalMoney,jdbcType=INTEGER},
      is_lock = #{record.isLock,jdbcType=INTEGER},
      is_del = #{record.isDel,jdbcType=INTEGER},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      pic_address = #{record.picAddress,jdbcType=LONGVARCHAR},
      favorites_ids = #{record.favoritesIds,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cps_member
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      Md5_password = #{record.md5Password,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      weixin = #{record.weixin,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      member_type_id = #{record.memberTypeId,jdbcType=INTEGER},
      member_type_name = #{record.memberTypeName,jdbcType=VARCHAR},
      vip_level = #{record.vipLevel,jdbcType=INTEGER},
      buy_time = #{record.buyTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      aging = #{record.aging,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=DATE},
      points = #{record.points,jdbcType=INTEGER},
      last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      last_loginIp = #{record.lastLoginip,jdbcType=VARCHAR},
      register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      register_ip = #{record.registerIp,jdbcType=VARCHAR},
      UUID_token = #{record.uuidToken,jdbcType=VARCHAR},
      total_money = #{record.totalMoney,jdbcType=INTEGER},
      is_lock = #{record.isLock,jdbcType=INTEGER},
      is_del = #{record.isDel,jdbcType=INTEGER},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Member" >
    update cps_member
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="md5Password != null" >
        Md5_password = #{md5Password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="weixin != null" >
        weixin = #{weixin,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="memberTypeId != null" >
        member_type_id = #{memberTypeId,jdbcType=INTEGER},
      </if>
      <if test="memberTypeName != null" >
        member_type_name = #{memberTypeName,jdbcType=VARCHAR},
      </if>
      <if test="vipLevel != null" >
        vip_level = #{vipLevel,jdbcType=INTEGER},
      </if>
      <if test="buyTime != null" >
        buy_time = #{buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="aging != null" >
        aging = #{aging,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="points != null" >
        points = #{points,jdbcType=INTEGER},
      </if>
      <if test="lastLogin != null" >
        last_login = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginip != null" >
        last_loginIp = #{lastLoginip,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null" >
        register_ip = #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="uuidToken != null" >
        UUID_token = #{uuidToken,jdbcType=VARCHAR},
      </if>
      <if test="totalMoney != null" >
        total_money = #{totalMoney,jdbcType=INTEGER},
      </if>
      <if test="isLock != null" >
        is_lock = #{isLock,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="gmtCreated != null" >
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="picAddress != null" >
        pic_address = #{picAddress,jdbcType=LONGVARCHAR},
      </if>
      <if test="favoritesIds != null" >
        favorites_ids = #{favoritesIds,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.demo.model.Member" >
    update cps_member
    set username = #{username,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      Md5_password = #{md5Password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      weixin = #{weixin,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      member_type_id = #{memberTypeId,jdbcType=INTEGER},
      member_type_name = #{memberTypeName,jdbcType=VARCHAR},
      vip_level = #{vipLevel,jdbcType=INTEGER},
      buy_time = #{buyTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      aging = #{aging,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      points = #{points,jdbcType=INTEGER},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      last_loginIp = #{lastLoginip,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      register_ip = #{registerIp,jdbcType=VARCHAR},
      UUID_token = #{uuidToken,jdbcType=VARCHAR},
      total_money = #{totalMoney,jdbcType=INTEGER},
      is_lock = #{isLock,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      pic_address = #{picAddress,jdbcType=LONGVARCHAR},
      favorites_ids = #{favoritesIds,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Member" >
    update cps_member
    set username = #{username,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      Md5_password = #{md5Password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      weixin = #{weixin,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      member_type_id = #{memberTypeId,jdbcType=INTEGER},
      member_type_name = #{memberTypeName,jdbcType=VARCHAR},
      vip_level = #{vipLevel,jdbcType=INTEGER},
      buy_time = #{buyTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      aging = #{aging,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      points = #{points,jdbcType=INTEGER},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      last_loginIp = #{lastLoginip,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      register_ip = #{registerIp,jdbcType=VARCHAR},
      UUID_token = #{uuidToken,jdbcType=VARCHAR},
      total_money = #{totalMoney,jdbcType=INTEGER},
      is_lock = #{isLock,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>